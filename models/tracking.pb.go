// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: protos/tracking.proto

package models

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type VehicleState int32

const (
	VehicleState_OUT_OF_FUEL VehicleState = 0
	VehicleState_TRAFFIC_JAM VehicleState = 1
)

// Enum value maps for VehicleState.
var (
	VehicleState_name = map[int32]string{
		0: "OUT_OF_FUEL",
		1: "TRAFFIC_JAM",
	}
	VehicleState_value = map[string]int32{
		"OUT_OF_FUEL": 0,
		"TRAFFIC_JAM": 1,
	}
)

func (x VehicleState) Enum() *VehicleState {
	p := new(VehicleState)
	*p = x
	return p
}

func (x VehicleState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VehicleState) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_tracking_proto_enumTypes[0].Descriptor()
}

func (VehicleState) Type() protoreflect.EnumType {
	return &file_protos_tracking_proto_enumTypes[0]
}

func (x VehicleState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VehicleState.Descriptor instead.
func (VehicleState) EnumDescriptor() ([]byte, []int) {
	return file_protos_tracking_proto_rawDescGZIP(), []int{0}
}

type Vehicle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Vehicle string `protobuf:"bytes,3,opt,name=vehicle,proto3" json:"vehicle,omitempty"`
}

func (x *Vehicle) Reset() {
	*x = Vehicle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_tracking_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vehicle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vehicle) ProtoMessage() {}

func (x *Vehicle) ProtoReflect() protoreflect.Message {
	mi := &file_protos_tracking_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vehicle.ProtoReflect.Descriptor instead.
func (*Vehicle) Descriptor() ([]byte, []int) {
	return file_protos_tracking_proto_rawDescGZIP(), []int{0}
}

func (x *Vehicle) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Vehicle) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Vehicle) GetVehicle() string {
	if x != nil {
		return x.Vehicle
	}
	return ""
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  int32 `protobuf:"varint,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude int32 `protobuf:"varint,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_tracking_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_protos_tracking_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_protos_tracking_proto_rawDescGZIP(), []int{1}
}

func (x *Point) GetLatitude() int32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Point) GetLongitude() int32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type Track struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vehicle *Vehicle     `protobuf:"bytes,1,opt,name=vehicle,proto3" json:"vehicle,omitempty"`
	Point   *Point       `protobuf:"bytes,2,opt,name=point,proto3" json:"point,omitempty"`
	State   VehicleState `protobuf:"varint,3,opt,name=state,proto3,enum=tracking.VehicleState" json:"state,omitempty"`
}

func (x *Track) Reset() {
	*x = Track{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_tracking_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Track) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Track) ProtoMessage() {}

func (x *Track) ProtoReflect() protoreflect.Message {
	mi := &file_protos_tracking_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Track.ProtoReflect.Descriptor instead.
func (*Track) Descriptor() ([]byte, []int) {
	return file_protos_tracking_proto_rawDescGZIP(), []int{2}
}

func (x *Track) GetVehicle() *Vehicle {
	if x != nil {
		return x.Vehicle
	}
	return nil
}

func (x *Track) GetPoint() *Point {
	if x != nil {
		return x.Point
	}
	return nil
}

func (x *Track) GetState() VehicleState {
	if x != nil {
		return x.State
	}
	return VehicleState_OUT_OF_FUEL
}

type Trip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Track []*Track `protobuf:"bytes,2,rep,name=track,proto3" json:"track,omitempty"`
}

func (x *Trip) Reset() {
	*x = Trip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_tracking_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trip) ProtoMessage() {}

func (x *Trip) ProtoReflect() protoreflect.Message {
	mi := &file_protos_tracking_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trip.ProtoReflect.Descriptor instead.
func (*Trip) Descriptor() ([]byte, []int) {
	return file_protos_tracking_proto_rawDescGZIP(), []int{3}
}

func (x *Trip) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Trip) GetTrack() []*Track {
	if x != nil {
		return x.Track
	}
	return nil
}

type JoinTrip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trip    *Trip    `protobuf:"bytes,1,opt,name=trip,proto3" json:"trip,omitempty"`
	Vehicle *Vehicle `protobuf:"bytes,2,opt,name=vehicle,proto3" json:"vehicle,omitempty"`
}

func (x *JoinTrip) Reset() {
	*x = JoinTrip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_tracking_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinTrip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinTrip) ProtoMessage() {}

func (x *JoinTrip) ProtoReflect() protoreflect.Message {
	mi := &file_protos_tracking_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinTrip.ProtoReflect.Descriptor instead.
func (*JoinTrip) Descriptor() ([]byte, []int) {
	return file_protos_tracking_proto_rawDescGZIP(), []int{4}
}

func (x *JoinTrip) GetTrip() *Trip {
	if x != nil {
		return x.Trip
	}
	return nil
}

func (x *JoinTrip) GetVehicle() *Vehicle {
	if x != nil {
		return x.Vehicle
	}
	return nil
}

var File_protos_tracking_proto protoreflect.FileDescriptor

var file_protos_tracking_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x22, 0x47, 0x0a, 0x07, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x22, 0x41, 0x0a, 0x05, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x89, 0x01,
	0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x2b, 0x0a, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x07, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x3d, 0x0a, 0x04, 0x54, 0x72, 0x69,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x25, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x22, 0x5b, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e,
	0x54, 0x72, 0x69, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x72, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72,
	0x69, 0x70, 0x52, 0x04, 0x74, 0x72, 0x69, 0x70, 0x12, 0x2b, 0x0a, 0x07, 0x76, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x07, 0x76, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x2a, 0x30, 0x0a, 0x0c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f,
	0x46, 0x55, 0x45, 0x4c, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x52, 0x41, 0x46, 0x46, 0x49,
	0x43, 0x5f, 0x4a, 0x41, 0x4d, 0x10, 0x01, 0x32, 0x70, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x33, 0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x72, 0x69, 0x70, 0x12,
	0x12, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x54,
	0x72, 0x69, 0x70, 0x1a, 0x0f, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x22, 0x00, 0x30, 0x01, 0x12, 0x2f, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x0f, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x1a, 0x0f, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_protos_tracking_proto_rawDescOnce sync.Once
	file_protos_tracking_proto_rawDescData = file_protos_tracking_proto_rawDesc
)

func file_protos_tracking_proto_rawDescGZIP() []byte {
	file_protos_tracking_proto_rawDescOnce.Do(func() {
		file_protos_tracking_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_tracking_proto_rawDescData)
	})
	return file_protos_tracking_proto_rawDescData
}

var file_protos_tracking_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_tracking_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_protos_tracking_proto_goTypes = []interface{}{
	(VehicleState)(0), // 0: tracking.VehicleState
	(*Vehicle)(nil),   // 1: tracking.Vehicle
	(*Point)(nil),     // 2: tracking.Point
	(*Track)(nil),     // 3: tracking.Track
	(*Trip)(nil),      // 4: tracking.Trip
	(*JoinTrip)(nil),  // 5: tracking.JoinTrip
}
var file_protos_tracking_proto_depIdxs = []int32{
	1, // 0: tracking.Track.vehicle:type_name -> tracking.Vehicle
	2, // 1: tracking.Track.point:type_name -> tracking.Point
	0, // 2: tracking.Track.state:type_name -> tracking.VehicleState
	3, // 3: tracking.Trip.track:type_name -> tracking.Track
	4, // 4: tracking.JoinTrip.trip:type_name -> tracking.Trip
	1, // 5: tracking.JoinTrip.vehicle:type_name -> tracking.Vehicle
	5, // 6: tracking.Tracking.SyncTrip:input_type -> tracking.JoinTrip
	3, // 7: tracking.Tracking.SendTrack:input_type -> tracking.Track
	3, // 8: tracking.Tracking.SyncTrip:output_type -> tracking.Track
	3, // 9: tracking.Tracking.SendTrack:output_type -> tracking.Track
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_protos_tracking_proto_init() }
func file_protos_tracking_proto_init() {
	if File_protos_tracking_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_tracking_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vehicle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_tracking_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_tracking_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Track); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_tracking_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_tracking_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinTrip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_tracking_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_tracking_proto_goTypes,
		DependencyIndexes: file_protos_tracking_proto_depIdxs,
		EnumInfos:         file_protos_tracking_proto_enumTypes,
		MessageInfos:      file_protos_tracking_proto_msgTypes,
	}.Build()
	File_protos_tracking_proto = out.File
	file_protos_tracking_proto_rawDesc = nil
	file_protos_tracking_proto_goTypes = nil
	file_protos_tracking_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TrackingClient is the client API for Tracking service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TrackingClient interface {
	SyncTrip(ctx context.Context, in *JoinTrip, opts ...grpc.CallOption) (Tracking_SyncTripClient, error)
	SendTrack(ctx context.Context, in *Track, opts ...grpc.CallOption) (*Track, error)
}

type trackingClient struct {
	cc grpc.ClientConnInterface
}

func NewTrackingClient(cc grpc.ClientConnInterface) TrackingClient {
	return &trackingClient{cc}
}

func (c *trackingClient) SyncTrip(ctx context.Context, in *JoinTrip, opts ...grpc.CallOption) (Tracking_SyncTripClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Tracking_serviceDesc.Streams[0], "/tracking.Tracking/SyncTrip", opts...)
	if err != nil {
		return nil, err
	}
	x := &trackingSyncTripClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Tracking_SyncTripClient interface {
	Recv() (*Track, error)
	grpc.ClientStream
}

type trackingSyncTripClient struct {
	grpc.ClientStream
}

func (x *trackingSyncTripClient) Recv() (*Track, error) {
	m := new(Track)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *trackingClient) SendTrack(ctx context.Context, in *Track, opts ...grpc.CallOption) (*Track, error) {
	out := new(Track)
	err := c.cc.Invoke(ctx, "/tracking.Tracking/SendTrack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TrackingServer is the server API for Tracking service.
type TrackingServer interface {
	SyncTrip(*JoinTrip, Tracking_SyncTripServer) error
	SendTrack(context.Context, *Track) (*Track, error)
}

// UnimplementedTrackingServer can be embedded to have forward compatible implementations.
type UnimplementedTrackingServer struct {
}

func (*UnimplementedTrackingServer) SyncTrip(*JoinTrip, Tracking_SyncTripServer) error {
	return status.Errorf(codes.Unimplemented, "method SyncTrip not implemented")
}
func (*UnimplementedTrackingServer) SendTrack(context.Context, *Track) (*Track, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendTrack not implemented")
}

func RegisterTrackingServer(s *grpc.Server, srv TrackingServer) {
	s.RegisterService(&_Tracking_serviceDesc, srv)
}

func _Tracking_SyncTrip_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(JoinTrip)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TrackingServer).SyncTrip(m, &trackingSyncTripServer{stream})
}

type Tracking_SyncTripServer interface {
	Send(*Track) error
	grpc.ServerStream
}

type trackingSyncTripServer struct {
	grpc.ServerStream
}

func (x *trackingSyncTripServer) Send(m *Track) error {
	return x.ServerStream.SendMsg(m)
}

func _Tracking_SendTrack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Track)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackingServer).SendTrack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tracking.Tracking/SendTrack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackingServer).SendTrack(ctx, req.(*Track))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tracking_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tracking.Tracking",
	HandlerType: (*TrackingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendTrack",
			Handler:    _Tracking_SendTrack_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SyncTrip",
			Handler:       _Tracking_SyncTrip_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protos/tracking.proto",
}
